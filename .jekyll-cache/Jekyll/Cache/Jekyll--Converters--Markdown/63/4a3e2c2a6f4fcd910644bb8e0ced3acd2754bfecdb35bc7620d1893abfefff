I"ä.<p>This tutorial will introduce the image element and how to use that element to get images to display on your pages. This tutorial will use Exercise 2 as the example for adding images.</p>

<h3 id="step-1-open-your-repository-in-atom"><span id="step1">Step 1: Open Your Repository in Atom</span></h3>
<p>Start with opening up the Github App and making sure you have your repository as the Current Repository and that the Current Branch is gh-pages. If those two pieces of information are correct, click the ‚ÄúOpen in Atom‚Äù button in the middle of the screen.</p>

<p><img src="/assets/img/2p2/step1a1.png" alt="main Github App window" title="Step 1a" /></p>

<p>This should open up Atom with a screen that looks something like the below.</p>

<p><img src="/assets/img/2p2/step1a2.png" alt="repository opened in Atom" title="Step 1a" /></p>

<p>A few notes here. If you don‚Äôt see the project panel on the left of the window you can go to <span class="command"><em>View &gt; Toggle Tree View</em></span> to open it up. If you see files that start with a period, like <strong>.gitignore</strong> or <strong>.DS_Store</strong> you can ignore those. They are hidden files that you probably don‚Äôt see in your repository but show up in Atom. This view is also assuming you are looking at this tutorial after finishing the 2.1 tutorial. If you have other files or folders in your repository this will look different.</p>

<h3 id="step-2-add-a-folder-html-file-and-images"><span id="step2">Step 2: Add a Folder, HTML File, and Images</span></h3>
<p>The nice thing about Atom is you can add folders and file right from the tree view in the left panel. If you right click in that panel you will see the pop out in the image below.</p>

<p><img src="/assets/img/2p2/step2.png" alt="right clicking in the tree view" title="Step 2" /></p>

<h4 id="step-2a-add-the-exercise-2-folder">Step 2a: Add the Exercise 2 Folder</h4>
<p>In that pop out click the <span class="command"><em>New Folder</em></span> option and in the pop up that says ‚ÄúEnter the path for the new folder‚Äù type a folder name for your exercise 2 folder, <strong>e2</strong> is nice, short, and descriptive. Hit <span class="command"><em>Enter</em></span> to create the folder.</p>

<p><img src="/assets/img/2p2/step2a.png" alt="adding a new folder in Atom" title="Step 2a" /></p>

<h4 id="step-2b-add-an-html-file">Step 2b: Add an HTML File</h4>
<p>Now right click on the folder you just created but this time select <span class="command"><em>New File</em></span>. Another pop up will appear that should already be filled with the folder name then a forward slash. If you don‚Äôt see that folder name you did not right click on the new folder. You want to add a new HTML file to this folder so what do you think it should be called? If you said <span class="spoiler">index.html</span> you are correct. Type the file name and then hit enter to create the file.</p>

<p><img src="/assets/img/2p2/step2b1.png" alt="adding a new file in Atom" title="Step 2b" /></p>

<p>When you hit enter Atom should create the file and also open it so your Tree View should have a new exercise 2 folder and an HTML file inside of that.</p>

<p><img src="/assets/img/2p2/step2b2.png" alt="view of newly created folder and file in Atom" title="Step 2b" /></p>

<h4 id="step-2c-add-an-image-folder-and-images">Step 2c: Add an Image Folder and Images</h4>
<p>Once again right click on the Exercise 2 folder you created and add a new folder named <strong>images</strong>.</p>

<p><img src="/assets/img/2p2/step2c1.png" alt="adding an images folder in Atom" title="Step 2c" /></p>

<p>Now that the image folder is created, add your images to that folder. You can do this a bunch of different ways but the easiest might be opening two windows with the files and dragging them from the old location to the new or copy and paste to the new location. However you want to do it the goal is to get the 5 PNG files into the images folder.</p>

<p><img src="/assets/img/2p2/step2c2.png" alt="adding png files to the images folder" title="Step 2c" /></p>

<h3 id="step-3-add-in-basic-html-setup"><span id="step3">Step 3: Add in Basic HTML Setup</span></h3>
<p>Your HTML file should still be open but if it isn‚Äôt make sure your HTML file in the Exercise 2 folder is open and add in the minimum HTML set up, give it a descriptive <code class="highlighter-rouge">title</code> and then save the file.</p>

<p><img src="/assets/img/2p1/step3.png" alt="html file with minimum HTML" title="Step 3" /></p>

<h3 id="step-4-add-image-element"><span id="step4">Step 4: Add Image Element</span></h3>

<p>To get images to display on your page you need to add the image element <code class="highlighter-rouge">&lt;img&gt;</code>. The image element needs two attributes, <code class="highlighter-rouge">src</code> and <code class="highlighter-rouge">alt</code>. The <code class="highlighter-rouge">src</code> attribute is where the path to the image file goes and the <code class="highlighter-rouge">alt</code> attribute holds text to display if the image link is broken or the user is using a screen reader. The image element is also an empty element so there is no content or closing tag.</p>

<p>In the <code class="highlighter-rouge">body</code> add an image element. <code class="highlighter-rouge">&lt;img src="#" alt="#"&gt;</code></p>

<p><img src="/assets/img/2p2/step4a1.png" alt="image element added in the body" title="Step 4" /></p>

<p>Now replace the two attributes with the appropriate values. <code class="highlighter-rouge">src</code> ‚Äì <span class="spoiler">src=‚Äùimages/1.png‚Äù</span>. <code class="highlighter-rouge">alt</code> - <span class="spoiler">alt=‚Äùshape layout 1‚Äù</span>. Once again the path in the <code class="highlighter-rouge">src</code> attribute is dependent on your folder and file naming. This path works for my file and folder naming, if yours is different the path needs to be different.</p>

<p><img src="/assets/img/2p2/step4a2.png" alt="image element with attribute values added" title="Step 4" /></p>

<p>Before you add the other images it is worth saving the file and checking if everything is working in the browser. Once you have checked and verified that the image is displaying on the page, repeat this step four more times to add all of your images for Exercise 2 onto the page.</p>

<p><img src="/assets/img/2p2/step4a3.png" alt="all five images added to the HTML file" title="Step 4" /></p>

<h3 id="step-5-link-to-exercise-2"><span id="step5">Step 5: Link to Exercise 2</span></h3>

<p>The last step is adding a link to your main page for Exercise 2. So open up your index.html file in your root directory and add in an anchor element for Exercise 2. Make sure you are wrapping the text inside the list item for Exercise 2 and make sure you have an opening tag and closing tag.</p>

<p><img src="/assets/img/2p2/step5.png" alt="adding a link to e2 on the homepage" title="Step 5" /></p>

<h3 id="step-6-add-css"><span id="step6">Step 6: Add CSS</span></h3>
<p>The page works but it doesn‚Äôt look very good. How can you make it look better? CSS! In your repository add a <strong>css</strong> folder. Once you have the folder make a new file in Atom and save it in your newly created <strong>css</strong> folder as <strong>main.css</strong>. This file will now allow you to control the look of your repository‚Äôs homepage. If you need a reminder on how CSS works make sure you have another look at the 2.3: External Style Sheets PDF on Blackboard.</p>

<h4 id="step-6a-add-styles">Step 6a: Add Styles</h4>
<p>On line one of the newly created CSS file add a selector for something you want to style. In this case, style the <code class="highlighter-rouge">body</code> element and type <code class="highlighter-rouge">body {</code> on line 1 and then close the style on line 3 with a closing curly bracket, <code class="highlighter-rouge">}</code>.</p>

<p><img src="/assets/img/2p1/step6a1.png" alt="body style in CSS" title="Step 6a1" /></p>

<p>Now add a declation in there (<code class="highlighter-rouge">property: value;</code>) to change the <code class="highlighter-rouge">background-color</code> for the <code class="highlighter-rouge">body</code>. This allows a quick, easy check to see if the CSS file is correctly linked to the HTML file. Add the property <code class="highlighter-rouge">background-color</code> with the value of <code class="highlighter-rouge">yellow</code> to line two of the CSS file. Make sure it is indented one level because this declaration is inside the <code class="highlighter-rouge">body</code> style rule.</p>

<p><img src="/assets/img/2p1/step6a2.png" alt="changing the background color of the body in CSS" title="Step 6a2" /></p>

<p>Save the CSS file and preview your main HTML file again. Did anything change? No? Any ideas why? If you guessed that the CSS file isn‚Äôt connected to the HTML file yet you would be correct!</p>

<h4 id="step-6b-connect-css-and-html-files">Step 6b: Connect CSS and HTML Files</h4>

<p>To connect the two files together you need to add the <code class="highlighter-rouge">link</code> element to the HTML file. The <code class="highlighter-rouge">link</code> element is an empty element that goes in the <code class="highlighter-rouge">head</code> of the HTML document and must have two attributes, <code class="highlighter-rouge">rel</code> and <code class="highlighter-rouge">href</code>.</p>

<p>Open up your main <strong>index.html</strong> file and add a new line beneath your <code class="highlighter-rouge">title</code> element. On that line add the link element, <code class="highlighter-rouge">&lt;link rel="#" href="#"&gt;</code>. Try and replace the ‚Äú#‚Äù with the appropriate values for each attribute. The <code class="highlighter-rouge">rel</code> value should define the documents relationship and the <code class="highlighter-rouge">href</code> value should be the path to your css file. <code class="highlighter-rouge">rel</code> attribute ‚Äì <span class="spoiler">rel=‚Äùstylesheet‚Äù</span>, <code class="highlighter-rouge">href</code> attribute ‚Äì <span class="spoiler">href=‚Äùcss/main.css‚Äù</span>.</p>

<p>Another note: Again this path is for the file and folder names and locations of this tutorial. If you did something different, that path will not work.</p>

<p>Once you have the values, preview the HTML page and see if the background turned yellow. If it turned yellow that means your files are connected and you can add more styles to your CSS file to control the look of your homepage. If it didn‚Äôt turn yellow try going back through and comparing your files to the screenshots and see if you can find the issue.</p>

<p><img src="/assets/img/2p1/step6b1.png" alt="adding the link element to the head of the HTML document" title="Step 6b1" />
<img src="/assets/img/2p1/step6b2.png" alt="broswer preview of HTML page showing CSS changes" title="Step 6b2" /></p>

<h3 id="step-7-go-crazy"><span id="step7">Step 7: Go Crazy</span></h3>
<p>Now that you have a CSS file that is connected to your HTML file you can add all the styles you want. Just remember that in order to style an element in your HTML you need to target that element with the same selector. So if you want to style the list items in your HTML file, the CSS selector is going to be <code class="highlighter-rouge">li</code>. If you want to style the level 1 heading, the CSS selector is going to be <code class="highlighter-rouge">h1</code>. This allows you to style any HTML element that displays on the page (meaning you can‚Äôt style the <code class="highlighter-rouge">title</code> element).</p>

<p>If you run into something that you don‚Äôt know how to change, try Googling it as if you were asking me. ‚ÄúHow do I change the font size in CSS?‚Äù or ‚ÄúHow do I change the color of text HTML‚Äù or ‚ÄúHow do I change the hover color of my links CSS?‚Äù</p>
:ET